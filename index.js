let express = require('express');
let bodyParser = require('body-parser');
let app = express();
const os = require('os');

let t1ken = 'enter your token here';
const VkBot = require('node-vk-bot-api'),
  Markup = require('node-vk-bot-api/lib/markup'),
  api = require('node-vk-bot-api/lib/api'),
  Scene = require('node-vk-bot-api/lib/scene'),
  Context = require('node-vk-bot-api/lib/context'),
  bot = new VkBot(t1ken)
var VK = require('VK-Promise'),
    vk = new VK('enter your token here');
var fs = require('fs')
key = 'yandex translate token here'
var translate = require('yandex-translate')(key)

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('public'));

const parser = require('xml2json');
var needle = require("needle");
const axios = require('axios');
const moment = require('moment');
let v = 5.101
var text = 1;
const admins = [] // admins massive, only numbers (example: 1, 1111, 1112113122 etc.)



/*
bot.command(/(\/|!)rand/i, async (data) => {
	let peer = data.message.peer_id
	let cid = data.message.peer_id - 2e9
  let chatUsersReq = await api('messages.getConversationMembers', { access_token: t1ken, peer_id: peer, v: v }) 
  let chatUsers = chatUsersReq.response.items 
  let arr = chatUsers.map(el => el.member_id)
  let id = arr[getRandomInRange(0, arr.length-1)];
  api('messages.removeChatUser', { chat_id: cid, user_id: id, access_token: t1ken, v: v }).then(res => {
	let da = res.data.response[0]
  data.reply("–£—Å–ø–µ—à–Ω–æ")
  }).catch(er => 
          {
        if (id > 0) data.reply('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å ' + '@id' + id + '(–¥–∞–Ω–Ω–æ–≥–æ) ' + '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      else data.reply('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å ' + '@club' + (-id) + '(–¥–∞–Ω–Ω–æ–µ) ' + '—Å–æ–æ–±—â–µ—Å—Ç–≤–æ')
			})
}) // kick random conversation member 
*/


bot.command(/^!admin/i, (data) => {

}) // TODO

bot.command(/^!check/i, async (data) => {

}) // TODO 

bot.command(/^!–ø–µ—Ä–µ–≤–æ–¥/i, (data) => {
  const regex = /^(?:!–ø–µ—Ä–µ–≤–æ–¥) (.*?)$/gm;
      const str = data.message.text
      const m = regex.exec(str);
translate.detect(m[1], function(err, res) {
  if(res.lang != 'ru'){
    translate.translate(m[1], { to: 'ru' }, function(err, res) {
      data.reply('–ü–µ—Ä–µ–≤–æ–¥: ' + res.text);
     });
  } else data.reply('–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å –†—É—Å—Å–∫–æ–≥–æ –Ω–∞ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.')
});
}) // translation from any language, which supportet by Yandex Translator

bot.command(/(\/|@)everyone/i, async (data) => {
let user1 = data.message.from_id;
let admin2 = 120158515;
   let admin3 = 305738074;
  if (admins.includes(user)){
    const worker = [5024999, 216916273, 301322529, 143094517, 877281, 120158515, 305738074, 6650673]
          const regex = /^(?:@everyone).*?([\d]+).*?$/gm;
      var str = data.message.text;
      var str2 = str.replace(/@everyone/i, '')
  let cid = data.message.peer_id
  let uId = data.message.from_id
  let chatUsersReq = await api('messages.getConversationMembers', { access_token: t1ken, peer_id: cid, v: v }) 
  let chatUsers = chatUsersReq.response.items
  var mes;
  let arr = chatUsers.map(el => el.member_id)  
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] > 0) {
      mes += ' @id' + JSON.stringify(arr[i]) + '(&#8300;)'
    } else mes += ' @club' + -JSON.stringify(arr[i]) + '(&#8300;)'  
  }
  try {
    
                    axios.get('https://api.vk.com/method/users.get?access_token=' + t1ken + '&user_ids=' + uId + '&v=' + v)
                        .then(res => {
                            let dataa = res.data.response[0]
                            let user = dataa.id
               var text = String(mes).replace(/undefined/i, '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç ' + "@id" + user + "(–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)")
               var text = text.replace(/5024999/i, '1')
               var text = text.replace(/216916273/i, '1')
               var text = text.replace(/301322529/i, '1')
               var text = text.replace(/143094517/i, '1')
               var text = text.replace(/877281/i, '1')
               var text = text.replace(/120158515/i, '1')
               var text = text.replace(/305738074/i, '1')
               var text = text.replace(/6650673/i, '1')
               var text = text.replace(/82253881/i, '1')
               data.reply(text)
                        })
                } catch (er) {
                  
        }
 
  }
}) // mention everyone in the conversation

bot.command(/^!dkb/i, (data) => {
  	let peer = data.message.peer_id;
  let dkb = '{ "one_time": true, "buttons": [ [{ "action": { "type": "vkpay", "hash": "action=transfer-to-group&group_id=144372147&aid=10" } }] ] }'
api('messages.send', {peer_id: peer, keyboard: dkb, message: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–∞–Ω–∞', random_id: '0', access_token: t1ken, v: v })
}) // donate to me by VK Pay

bot.command(/^—Ä–∞–∑–±—É–¥–∏/i, (data) => {
      let user = data.message.from_id;
let admin = 376404149;
let admin2 = 305738074;
let admin3 = 297973760;
      const regex = /^(?:—Ä–∞–∑–±—É–¥–∏|–ø—Ä–æ—Å–Ω–∏—Å—å).*?([\d]+).*?$/gm;
      const str = data.message.text
      const m = regex.exec(str);
      const user_id = m[1]; 
  if ((user == admin) || (user == admin2) || (user == admin3)) {
  for(let y=0; y<100; y++){
     setTimeout(function() {  data.reply('@id'+m[1]) }, 5000)
  }
  }
}) // send 25 mentiones to user. example: —Ä–∞–∑–±—É–¥–∏ @id1

bot.command(/^–∫–∏–∫/i, (data) => {
  let user = data.message.from_id;
  if (admins.includes(user)) {
    if ((data.message.reply_message != undefined) || (data.message.fwd_messages != undefined) || (data.message.reply_message == data.message.fwd_messages)){
      if ((data.message.reply_message == undefined) && (data.message.fwd_messages.length == 0)) {
          const regex = /^(?:–∫–∏–∫|–∫—É—Å—å).*?([\d]+).*?$/gm;
          const str = data.message.text
          const m = regex.exec(str);
          const user_id = m[1];
          let cid = data.message.peer_id - 2e9
          if (user != user_id) {
              api('messages.removeChatUser', { chat_id: cid, member_id: m[1], access_token: t1ken, v: v })
          }
      } else

      if ((data.message.fwd_messages.length == 0) && (data.message.reply_message != undefined)) {
          let cid = data.message.peer_id - 2e9
          let user_kicked = data.message.reply_message.from_id
          if (user_kicked != user) {
              api('messages.removeChatUser', { chat_id: cid, member_id: user_kicked, access_token: t1ken, v: v })
          }
      } else

      if ((data.message.fwd_messages.length != 0) && (data.message.reply_message == undefined)) {
          let cid = data.message.peer_id - 2e9
          for (var i = 0; i < data.message.fwd_messages.length; i++) {
              let user_kicked = data.message.fwd_messages[i].from_id
              if (user_kicked > 1 && user_kicked != user) {
                  api('messages.removeChatUser', { chat_id: cid, member_id: user_kicked, access_token: t1ken, v: v })
              }
          }
      } 
    } else data.reply('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å')
  }
}) // kick specific member, you can kick one or more users by replying messages or kick one user by mention
/*
bot.command(/^(\/|!)m/i, (data) => {
	data.reply(JSON.stringify(data.message))
}) // service command, returns info about conversation

bot.command(/^(\/|!)id$/, (data) => {
	let id;
	if (data.message.fwd_messages[0] == undefined && data.message.reply_message == undefined) id = data.message.from_id
	if (data.message.fwd_messages[0] != undefined && data.message.reply_message == undefined) id = data.message.fwd_messages[0].from_id
	if (data.message.fwd_messages[0] == undefined && data.message.reply_message != undefined) id = data.message.reply_message.from_id
	data.reply(id) 
}) // command returns id of specific user*/
bot.command(/^(\/|!)cid$/, (data) => {
  	      let peer = data.message.peer_id
        	let cid = data.message.peer_id - 2e9
        	data.reply('ChatID: ' + cid + '\n PeerID: ' + peer)
}) // returns peer and chat id 


bot.command(/^\/q$/, (data) => {
	let chat_id = data.message.peer_id - 2e9
	let userKick = data.message.from_id
api('messages.removeChatUser', { chat_id: chat_id, user_id: userKick, access_token: t1ken })
	.then(res => {
		if (res.response == 1) {
		data.reply(`–ü–æ–∫–∞`)
		}
	})
	.catch(er => {
		data.reply(`–û–ø–∞, –æ—à–∏–±–æ—á–∫–∞! \n\n –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ª–∏–±–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–µ—Å–µ–¥—ã, –ø–æ—ç—Ç–æ–º—É –≤—ã–π—Ç–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ :—Å`)
		})
}) // self kick from conversation

bot.command(/(—è —Å–ø–∞—Ç—å|–≤—Å–µ–º –ø–æ–∫–∞ —è —Å–ø–∞—Ç—å)/i, (data) => {
  data.reply('—Å–ø–æ–∫–∏ –∑–∞–π–∫–∞ <3')
}) // wishes good night 

bot.command(/(–Ω–µ —Å–ø–∞—Ç—å)/i, (data) => {
  data.reply('üíî')
}) // broken heart if you dont sleep

bot.command(/(!donate)/i, (data) => {
  data.reply('https://www.donationalerts.com/r/pacmard', 'video-42722952_171514596')
}) // donate to me


bot.command(/^(\/|!)reg/i, (data) => {
  let message = data.message.text
  let uIdReg = message.replace(/(\/|!)reg/i, '').replace(/(([a-z–∞-—è]+:\/\/)?([\w\.]+\.[a-z–∞-—è]{2,6}\.?)(\S)?)/gi, '')
  let uId = uIdReg.match(/[\w*](\w*)]?/i)
  try {
    if (uId != null) {
      let url = 'https://api.vk.com/method/users.get?access_token=' + t1ken + '&user_ids=' + uId[0] + '&name_case=gen&v=' + v
      axios.get(url)
        .then(res => {
          let info = res.data.response[0]
            let name = `${info.first_name} ${info.last_name}`
          needle.get(`https://vk.com/foaf.php?id=${info.id}`, function (err, res) {
            if (err) console.log(err)
            let xml = res.body
            let out = JSON.parse(parser.toJson(xml))["rdf:RDF"]["foaf:Person"]["ya:created"]["dc:date"] // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 

            let unixCreated = moment(out).unix()
            let tzReg = moment.unix(unixCreated).utcOffset(+3)
            let age = getAgeText(unixCreated)
            let created = tzReg.locale('ru').format('D MMMM YYYY, HH:mm')
            data.reply(`–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${name}:\n ${created}\n –í–æ–∑—Ä–∞—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${age}`)
          })
        })
    } else if (data.message.fwd_messages[0] == undefined && data.message.reply_message == undefined) {
      needle.get(`https://vk.com/foaf.php?id=${data.message.from_id}`, function (err, res) {
        if (err) console.log(err)
        let xml = res.body
        let out = JSON.parse(parser.toJson(xml))["rdf:RDF"]["foaf:Person"]["ya:created"]["dc:date"] // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 
        let unixCreated = moment(out).unix()
        let tzReg = moment.unix(unixCreated).utcOffset(+3)
        let age = getAgeText(unixCreated)
        let created = tzReg.locale('ru').format('D MMMM YYYY, HH:mm')
        data.reply(`–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –í–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:\n${created}\n –í–æ–∑—Ä–∞—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${age}`)
      })
    } else if (data.message.fwd_messages[0] != undefined && data.message.reply_message == undefined) {
      if (data.message.fwd_messages[0].from_id > 0) {
        let url = 'https://api.vk.com/method/users.get?access_token=' + t1ken + '&user_ids=' + data.message.fwd_messages[0].from_id + '&name_case=gen&v=' + v
        axios.get(url)
          .then(res => {
            let info = res.data.response[0]
            let name = `${info.first_name} ${info.last_name}`
            needle.get(`https://vk.com/foaf.php?id=${data.message.fwd_messages[0].from_id}`, function (err, res) {
              if (err) console.log(err)
              let xml = res.body
              let out = JSON.parse(parser.toJson(xml))["rdf:RDF"]["foaf:Person"]["ya:created"]["dc:date"] // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 
              let unixCreated = moment(out).unix()
              let tzReg = moment.unix(unixCreated).utcOffset(+3)
              let age = getAgeText(unixCreated)
              let created = tzReg.locale('ru').format('D MMMM YYYY, HH:mm')
              data.reply(`–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${name}:\n ${created}\n –í–æ–∑—Ä–∞—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${age}`)
              console.log (url,)
            })
          })
      } else {
        data.reply('–¢–æ–ª—å–∫–æ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ–∫–Ω—É—Ç—å —É –≥—Ä—É–ø–ø—ã, —Å–∫–æ—Ç–∏–Ω–∞')
      }
    } else if (data.message.fwd_messages[0] == undefined && data.message.reply_message != undefined) {
      if (data.message.reply_message.from_id > 0) {
        let url = 'https://api.vk.com/method/users.get?access_token=' + t1ken + '&user_ids=' + data.message.reply_message.from_id + '&name_case=gen&v=' + v
        axios.get(url)
          .then(res => {
            let info = res.data.response[0]
            let name = `${info.first_name} ${info.last_name}`
            needle.get(`https://vk.com/foaf.php?id=${data.message.reply_message.from_id}`, function (err, res) {
              if (err) console.log(err)
              let xml = res.body
              let out = JSON.parse(parser.toJson(xml))["rdf:RDF"]["foaf:Person"]["ya:created"]["dc:date"] // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 
              let unixCreated = moment(out).unix()
              let tzReg = moment.unix(unixCreated).utcOffset(+3)
              let age = getAgeText(unixCreated)
              let created = tzReg.locale('ru').format('D MMMM YYYY, HH:mm')
              data.reply(`–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${name}:\n ${created}\n –í–æ–∑—Ä–∞—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${age}`)
              //console.log (url,)
            })
          })
      } else {
        data.reply('–¢–æ–ª—å–∫–æ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ–∫–Ω—É—Ç—å —É –≥—Ä—É–ø–ø—ã, —Å–∫–æ—Ç–∏–Ω–∞')
      }
    }

 } catch (er) {
    data.reply(er.message)
  }
}) // check reg data of any user


bot.command('/alive', (data) => {
  data.reply('–∂–∏–≤–æ–π')
}) // service command, checking bot status


bot.command(/^(\/|!)–¥—Ä$/i, (cmd) => {
  let id;
  if (cmd.message.fwd_messages[0] != undefined && cmd.message.reply_message == undefined) {
    id = cmd.message.fwd_messages[0].from_id
  } else if (cmd.message.fwd_messages[0] == undefined && cmd.message.reply_message != undefined) {
    id = cmd.message.reply_message.from_id
  } else id = cmd.message.from_id
  if (id >= 0) {
    let url = 'https://api.vk.com/method/users.get?access_token=' + t1ken + '&user_ids=' + id + '&fields=bdate,first_name_gen,last_name_gen&v=' + v
    axios.get(url)
      .then(res => {
        let name = `${res.data.response[0].first_name}`
        let name_gen = `${res.data.response[0].first_name_gen} ${res.data.response[0].last_name_gen}`
        if (res.data.response[0].bdate != undefined) {
          let bdate = res.data.response[0].bdate.split('.')
          let one;
          let year = moment().year().toString();
          let curUnix = moment().unix()
          if (bdate[2] == undefined) {
            one = moment(bdate + "," + year, "DD,MM,YYYY").unix()
          } else {
            bdate = bdate.join(',').replace(/,[\d]*$/g, '')
            one = moment(bdate + "," + year, "DD,MM,YYYY").unix()
          }
          let two = moment(curUnix) + 10800 // +TZ
          let rem = one - two
          if (rem < 0) {
            year = (moment().year() + 1).toString();
            one = moment(bdate + "," + year, "DD,MM,YYYY").unix()
            two = moment(curUnix) + 10800
            rem = one - two
          } else { rem = one - two }
          let m, s, h;
          s = rem % 60;
          rem = (rem - s) / 60;
          m = rem % 60;
          rem = (rem - m) / 60
          h = (rem) % 24
          rem = (rem - h) / 24
          h = `${rem} ${dayname[CheckNumber(rem)]} ${h} ${hourname[CheckNumber(h)]}`
          rem = `${h} –∏ ${m} ${minname[CheckNumber(m)]}`
          if (cmd.message.fwd_messages[0] == undefined && cmd.message.reply_message == undefined) {
            cmd.reply(`üéÅ ${name}, –¥–æ —Ç–≤–æ–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: ${rem} üéÅ`)
          } else { cmd.reply(`üéÅ –î–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è ${name_gen}: ${rem}`) }
        } else
          if (res.data.response[0].bdate == undefined) cmd.reply('–ù–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –≤–∫–ª—é—á–∏—Ç–µ –µ—ë –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.')
      })
  } else {
    cmd.reply(`–¢—ã —á–æ`)
  }
}) // check your birthday 


bot.command(/^(\/|!)–∫–æ–≥–¥–∞/i, (msg) => {
    switch (random(1, 18)) {
      case 1:
        var mintes = declOfNum(['–º–∏–Ω—É—Ç—É', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç'])
        var rs = random(1, 60);
        msg.reply("–≠—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ -- " + rs + " " + mintes(rs))
        break;
      case 2:
        var mintes = declOfNum(['—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤'])
        var rs = random(1, 24);
        msg.reply("–≠—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ -- " + rs + " " + mintes(rs))
        break;
      case 3:
        var mintes = declOfNum(['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π'])
        var rs = random(1, 365);
        msg.reply("–≠—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ -- " + rs + " " + mintes(rs))
        break;
      case 4:
        var mintes = declOfNum(['–≥–æ–¥', '–≥–æ–¥–∞', '–ª–µ—Ç'])
        var rs = random(1, 60);
        msg.reply("–≠—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ -- " + rs + " " + mintes(rs))
        break;
      case 5:
        msg.reply("–ó–∞–≤—Ç—Ä–∞.");
        break;
      case 6:
        msg.reply("–ù–∏–∫–æ–≥–¥–∞.")
        break;
      case 7:
        msg.reply("–ö–æ–≥–¥–∞ –Ω–∞ –∞–º–∞–∑–∏–Ω–≥–µ –≤—ã–π–¥–µ—Ç –Ω–µ—Å–ø–∏–∑–∂–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–Ω–∏–∫–æ–≥–¥–∞).")
        break;
      case 8:
        msg.reply("–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å.")
        break;
      case 9:
        msg.reply("–°–µ–≥–æ–¥–Ω—è.")
        break;
      case 10:
        msg.reply("–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ.")
        break;
      case 11:
        msg.reply("–í —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ.")
        break;
      case 12:
        msg.reply("–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.")
        break;
      case 13:
        msg.reply("–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ.")
        break;
      case 14:
        msg.reply("–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é.")
        break;
      case 15:
        msg.reply("–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü.")
        break;
      case 16:
        msg.reply("–í—á–µ—Ä–∞.")
        break;
      case 17:
        msg.reply("–ö–æ–≥–¥–∞ —Ä–∞–∫ –Ω–∞ –≥–æ—Ä–µ —Å–≤–∏—Å—Ç–Ω–µ—Ç")
        break;
      case 18:
        msg.reply("–í —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É.")
        break;

    }
}) // sample of 'when'. sends random answer from massive

bot.command(/^!—á–∏—Å–ª–æ/i, (data) => {
    const regex = /^(?:!—á–∏—Å–ª–æ) (.*?)$/gm;
    const str = data.message.text
    const m = regex.exec(str);
    if(m[1] != undefined){
        let number = m[1];
      let  min = Math.ceil(0);
      let  max = Math.floor(number);
        let its = Math.floor(Math.random() * (max - min + 1)) + min;
        data.reply('–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ ' + number + ': ' + its)
    }
}) // random number in range of 0 to nubmer you wrote at the command, command example: !—á–∏—Å–ª–æ 102

bot.command(/(—á—Ç–æ –ª—É—á—à–µ|—á—Ç–æ –ª—É—á—à–µ)/i, (data) => {
  try {
    let message = data.message.text
    let b = message.replace(/\[(club|id)(\d+)\|(.+?)\]/, '')
    let c = b.replace(/(,)/, '')
    let str = c.replace(/(\/|!)—á—Ç–æ –ª—É—á—à–µ/i, '')
    let pick = str.split(/ –∏–ª–∏ /i)
    let max = pick.length - 1
    let rand = random(0, max)
    if (!pick[rand]) {
      // data.reply('–ê –∏–∑ —á–µ–≥–æ –≤—ã–±–∏—Ä–∞—Ç—å-—Ç–æ?')
    } else data.reply("–Ø –¥—É–º–∞—é, —á—Ç–æ " + pick[rand] + " –ª—É—á—à–µ") 
  } catch (er) {
    data.reply('')
  }
}) // using: /—á—Ç–æ –ª—É—á—à–µ X –∏–ª–∏ Y . sends random answer (X or Y)


bot.command(/^–ø–æ–≥–æ–¥–∞/i, (msg) => { 
	if (msg.message.peer_id != 2e9 + 42) {
		let message = msg.message.text;
		let cityName = encodeURI(message.replace(/–ø–æ–≥–æ–¥–∞ /i, ''))
		let weatherToken = "153ca3260d689a77a64566dc04a803c9"
		let url = "https://api.openweathermap.org/data/2.5/weather?&q=" + cityName + '&appid=' + weatherToken + '&lang=ru'
		//console.log (url)
		axios.get(url)
			.then(res => {
				let data = res.data
				if (data.sys.country == "RU") data.sys.country = "üá∑üá∫"
				if (data.sys.country == "UA") data.sys.country = "üá∫üá¶"
				if (data.sys.country == "LV") data.sys.country = "üá¶üáπ"
				if (data.sys.country == "KZ") data.sys.country = "üá∞üáø"
				if (data.sys.country == "KR") data.sys.country = "üá∞üá∑"
				if (data.sys.country == "LT") data.sys.country = "üá±üáπ"
				if (data.sys.country == "US") data.sys.country = "üá∫üá∏"
				if (data.sys.country == "PL") data.sys.country = "üáµüá±"
				if (data.sys.country == "JP") data.sys.country = "üáØüáµ"
				if (data.sys.country == "BY") data.sys.country = "üáßüáæ"
				if (data.sys.country == "CL") data.sys.country = "üá®üá±"
				if (data.sys.country == "GB") data.sys.country = "üá¨üáß"
				if (data.sys.country == "CN") data.sys.country = "üá®üá≥"
        if (data.sys.country == "BE") data.sys.country = "üáßüá™"
				let visibility = "üëÄ –í–∏–¥–∏–º–æ—Å—Ç—å: " + data.visibility / 1000 + " –∫–º"
				if (data.visibility == undefined) visibility = ''
				msg.reply(
					data.name + ' | ' + data.sys.country + '<br>' +
					'üåç –ü–æ–≥–æ–¥–∞: ' + data.weather[0].description + '<br>' +
					'üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + Math.round(data.main.temp - 273) + '¬∞–°' + '<br>' +
					'üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ' + data.main.humidity + '%' + '<br>' +
					'‚òÅ –û–±–ª–∞—á–Ω–æ—Å—Ç—å: ' + data.clouds.all + '%' + '<br>' +
					'üåÄ –í–µ—Ç–µ—Ä: ' + Math.floor(data.wind.speed) + ' –º/—Å' + ' | ' + Math.floor(data.wind.deg) + '¬∞<br>' +
					visibility
				)
			})
			.catch(er => {
				msg.reply(`–£–ø—Å.. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
			})
	}
}) // weather of specific city. usage: !–ø–æ–≥–æ–¥–∞ –ú–æ—Å–∫–≤–∞

bot.startPolling()


bot.event('message_new', (data) => {
  let chk = 'chat_invite_user';
  let chk2 = 'chat_invite_user_by_link';
 if (data.message.action != undefined){
    let peer = data.message.peer_id;
    let cid = data.message.peer_id - 2e9  
  	let user = data.message.from_id;
    let fff = data.message.action.member_id
 if (fff == -144372147){
 data.reply('–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è —Å–¥–µ–ª–∞–ª pacmard. –ï–≥–æ —Å–∞–π—Ç: pacmard.ru')
}
   let admin = 305738074;
   let admin2 = 261881593;
   let checksum = 2000000007;
}
}) // greeting when entering new conversation

// service functions below
var yearName = ['–≥–æ–¥', '–≥–æ–¥–∞', '–ª–µ—Ç']
var dayname = ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π'];
var hourname = ['—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤'];
var minname = ['–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç'];
var secname = ['—Å–µ–∫—É–Ω–¥–∞', '—Å–µ–∫—É–Ω–¥—ã', '—Å–µ–∫—É–Ω–¥'];
function CheckNumber(number) {
  var number = number;
  var b = number % 10; var a = (number % 100 - b) / 10;
  if (a == 0 || a >= 2) {
    if (b == 0 || (b > 4 && b <= 9)) { return 2; } else { if (b != 1) { return 1; } else { return 0; } }
  }
  else { return 2; }
}

function getAgeText(dateUnix) {
  let actUnix = moment().unix()
  let diffUnux = actUnix - dateUnix
  let y, d, residue = ''
  y = Math.floor(diffUnux / 31556926)
  residue = (y * 31556926) - diffUnux
  if (residue < 0) residue = residue - residue - residue
  d = Math.round(residue / 86400)
  if (d == 365) d = 0, y++

  let mes = `${y} ${yearName[CheckNumber(y)]} –∏ ${d} ${dayname[CheckNumber(d)]}`
  if (y == 0) mes = `${d} ${dayname[CheckNumber(d)]}`
  if (d == 0) mes = `${y} ${yearName[CheckNumber(y)]}`
  if (d == 0 && y == 0) mes = `0 –ª–µ—Ç –∏ 0 –¥–Ω–µ–π`
  return (mes);
}
function random(min, max) {

  return Math.floor(Math.random() * (max - min + 1)) + min;
}

var declOfNum = (function () {
  var cases = [2, 0, 1, 1, 1, 2];
  var declOfNumSubFunction = function (titles, number) {
    number = Math.abs(number);
    return titles[(number % 100 > 4 && number % 100 < 20) ? 2 : cases[(number % 10 < 5) ? number % 10 : 5]];
  }
  return function (_titles) {
    if (arguments.length === 1) {
      return function (_number) {
        return declOfNumSubFunction(_titles, _number)
      }
    } else {
      return declOfNumSubFunction.apply(null, arguments)
    }
  }
})()

function getRandomInRange(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
